#include <iostream>
using namespace std;

void enter_array(float num_arr[], int num_size) {
    for(int i = 0; i < num_size; i++) {
        cout << "enter number " << i << ": ";
        cin >> num_arr[i];
    }
}

void search_menu() {
    cout << "____search menu____" << endl;
    cout << "1. Binary search" << endl;
    cout << "2. Sequential search" << endl;
}

int binary_searching(float num_arr[], int num_size, float key) {
    int found = 0;
    int index = 0;
    int top = num_size - 1;
    int bottom = 0;
    int middle;

    do {
        middle = (top + bottom) / 2;
        if (key == num_arr[middle])
            found = 1;
        else {
            if (key < num_arr[middle])
                top = middle - 1;
            else
                bottom = middle + 1;
        }
    } while(found == 0 && top >= bottom);

    if(found == 0)
        index = -1;
    else
        index = middle;

    return index;
}

int sequential_search(float num_arr[], int num_size, float key) {
    for(int i = 0; i < num_size; i++) {
        if(num_arr[i] == key)
            return i;
    }
    return -1;
}

void simple_sorting(float num_arr[], int num_size){
    for(int i = 0; i < num_size - 1; i++){
        for(int j = i + 1; j < num_size; j++){
            if(num_arr[j] < num_arr[i]){
                float temp = num_arr[i];
                num_arr[i] = num_arr[j];
                num_arr[j] = temp;
            }
        }
    }
    cout << "Array sorted using Simple Sorting!" << endl;
}

void bubble_sorting(float num_arr[], int num_size){
    for(int i = 0; i < num_size - 1; i++){
        for(int j = 0; j < num_size - i - 1; j++){
            if(num_arr[j] > num_arr[j + 1]){
                float temp = num_arr[j];
                num_arr[j] = num_arr[j + 1];
                num_arr[j + 1] = temp;
            }
        }
    }
    cout << "Array sorted using Bubble Sorting!" << endl;
}

void selection_sorting(float num_arr[], int num_size){
    for(int i = 0; i < num_size - 1; i++){
        int min_index = i;
        for(int j = i + 1; j < num_size; j++){
            if(num_arr[j] < num_arr[min_index]){
                min_index = j;
            }
        }
        float temp = num_arr[i];
        num_arr[i] = num_arr[min_index];
        num_arr[min_index] = temp;
    }
    cout << "Array sorted using Selection Sorting!" << endl;
}

void insertion_sorting(float num_arr[], int num_size){
    for(int i = 1; i < num_size; i++){
        float key = num_arr[i];
        int j = i - 1;
        while(j >= 0 && num_arr[j] > key){
            num_arr[j + 1] = num_arr[j];
            j--;
        }
        num_arr[j + 1] = key;
    }
    cout << "Array sorted using Insertion Sorting!" << endl;
}

void insertion_sorting_with_binary_search(int num_arr[], int num_size, int key){
}


void sort_menu() {
    cout << "1. Simple sorting" << endl;
    cout << "2. Bubble sorting" << endl;
    cout << "3. Selection sorting" << endl;
    cout << "4. Insertion sorting" << endl;
    cout << "5. Insertion sorting with binary search" << endl;
}

int main() {
    int choice;
    int do_you = 2;
    float num_arr[100];
    int num_size = 0;   // <-- declare here (IMPORTANT)

    do {
        cout << "____MENU___" << endl;
        cout << "1. Enter an array of numbers" << endl;
        cout << "2. Searching" << endl;
        cout << "3. Sorting" << endl;
        cout << "4. Exit" << endl;
        cout << "Enter a choice (1/2/3/4): ";
        cin >> choice;
        if(choice == 4){
            cout<<"Exit Program"<<endl;
            break;
        }

        switch (choice) {
            case 1: {
                cout << "how many numbers??" << endl;
                cin >> num_size;
                enter_array(num_arr, num_size);
                cout<< "do you want to continue(1-yes/2-no)";
                cin>>do_you;
                break;
            }

            case 2: {
                search_menu();
                int s_choice;
                cout << "Enter a choice (1/2): ";
                cin >> s_choice;

                float key;
                cout << "Enter number to search: ";
                cin >> key;

                if (s_choice == 1) {
                    int result = binary_searching(num_arr, num_size, key);
                    cout << "Binary search result: " << result << endl;
                } else if (s_choice == 2) {
                    int result = sequential_search(num_arr, num_size, key);
                    cout << "Sequential search result: " << result << endl;
                } else
                    cout << "Invalid input" << endl;
                break;
            }

            case 3: {
                sort_menu();
                int sort_choice;
                cout << "Enter a sorting choice: ";
                cin >> sort_choice;

                if(sort_choice == 1)
                    simple_sorting(num_arr, num_size);
                else if(sort_choice == 2)
                    bubble_sorting(num_arr, num_size);
                else if(sort_choice == 3)
                    selection_sorting(num_arr, num_size);
                else if(sort_choice == 4)
                    insertion_sorting(num_arr, num_size);
                else if(sort_choice == 5)
                    insertion_sorting_with_binary_search(num_arr, num_size, key);
                else
                    cout << "Invalid sorting choice!" << endl;

                cout << "Sorted array: ";
                for(int i = 0; i < num_size; i++)
                    cout << num_arr[i] << " ";
                cout << endl;
                break;
            }

            default:
                cout << "Invalid main menu choice" << endl;
        }

    } while (do_you == 1);
}
